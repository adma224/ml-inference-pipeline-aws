name: Deploy web

on:
  push:
    branches: [main]
    paths:
      - "web_pages/**"

env:
  AWS_REGION: us-east-1
  SSM_BUCKET_PARAM: /ml-pipeline/frontend/bucket-name
  SSM_DIST_PARAM:   /ml-pipeline/edge/distribution-id

  
jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Resolve targets from SSM
        id: params
        run: |
          BUCKET=$(aws ssm get-parameter --name "${{ env.SSM_BUCKET_PARAM }}" --query "Parameter.Value" --output text)
          DIST=$(aws ssm get-parameter --name "${{ env.SSM_DIST_PARAM }}" --query "Parameter.Value" --output text)
          echo "bucket=$BUCKET" >> $GITHUB_OUTPUT
          echo "dist=$DIST"     >> $GITHUB_OUTPUT

      - name: Sync assets (immutable)
        run: |
          aws s3 sync web_pages s3://${{ steps.params.outputs.bucket }} \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp web_pages/index.html s3://${{ steps.params.outputs.bucket }}/index.html \
            --cache-control "no-cache,no-store,must-revalidate" \
            --content-type "text/html"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.params.outputs.dist }} \
            --paths "/*"
